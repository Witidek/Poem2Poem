(dp1
S'output'
p2
S"<class 'sqlite3.OperationalError'> database is locked"
p3
sS'layer'
p4
S'C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\nimport datetime\n\ndef index():\n    return locals()\n\ndef user():\n    return dict(form=auth())\n\ndef browse():\n    rows = db(db.poem).select()\n    return locals()\n\ndef search():\n    rows = db(db.poem).select()\n    searchKey = ""\n    searchType = \'Poems\'\n    form = FORM(\'Search: \',\n              INPUT(_name=\'search\'),\n              \'    Search By:  \',\n              INPUT(_type =\'radio\', _name = \'searchType\', _value = \'Poems\', _checked="checked"), \'  Poems \',\n              INPUT(_type =\'radio\', _name = \'searchType\', _value = \'Authors\'),\'  Authors  \',\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n        searchKey = form.vars.search\n        searchType = form.vars.searchType\n\n    return locals()\n\ndef poem():\n    # Redirect to poem browser if no argument for poem id\n    if not request.args(0): redirect(URL(\'browse\'))\n\n    # Load poem using the URL argument as poem id\n    poem = db.poem(request.args(0,cast=int))\n\n    # Displaying ABAB\n    if (poem.category == \'16 line ABAB rhyme\') or (poem.category == \'16 line AABB rhyme\') or (poem.category == \'Sonnet\') or (poem.category == \'Limerick\'):\n        abab = db(db.abab.poem_id == poem.id).select().first()\n        lines = db(db.new_line.poem_id == poem.id).select(orderby=db.new_line.line_number)\n        contributors = db(db.new_line.poem_id == poem.id).select(db.new_line.author, groupby=db.new_line.author)\n    # Displaying Haiku\n    elif poem.category == \'Haiku\':\n        haiku = db(db.haiku.poem_id == poem.id).select().first()\n        words = db(db.new_word.poem_id == poem.id).select(orderby=db.new_word.word_number)\n        contributors = db(db.new_word.poem_id == poem.id).select(db.new_word.author, groupby=db.new_word.author)\n\n    return locals()\n\ndef count_syllables(str):\n    import urllib\n    import urllib2\n    from gluon.contrib import simplejson\n\n    # GET JSONP from RhymeBrain API and parse\n    url = \'http://rhymebrain.com/talk\'\n    data = {}\n    data[\'function\'] = \'getWordInfo\'\n    data[\'word\'] = str\n    url_values = urllib.urlencode(data)\n    full_url = url + \'?\' + url_values\n    data = urllib2.urlopen(full_url)\n    result = data.read()\n    parsed_json = simplejson.loads(result)\n\n    # Return number of syllables cast as int\n    return int(parsed_json[\'syllables\'])\n\n@auth.requires_login()\ndef create():\n    # Redirect to poem browser if no argument for poem type\n    if not request.args(0): redirect(URL(\'browse\'))\n\n    # Create form for 16 line ABAB rhyme\n    if (request.args(0) == \'abab\') or (request.args(0) == \'aabb\') or (request.args(0) == \'sonnet\') or (request.args(0) == \'limerick\'):\n        form = SQLFORM.factory(db.poem, db.abab, fields=[\'title\', \'description\', \'body\', \'permission\']).process()\n        if request.args(0) == \'aabb\': form.vars.category = \'16 line AABB rhyme\'\n        elif request.args(0) == \'sonnet\': form.vars.category = \'Sonnet\'\n        elif request.args(0) == \'limerick\': form.vars.category = \'Limerick\'\n        if form.accepted:\n            # Do an insert if ABAB\n            id = db.poem.insert(**db.poem._filter_fields(form.vars))\n            db.abab.insert(poem_id = db.poem(id), body = form.vars.body)\n\n            # Create new mutex for this poem\n            db.mutex.insert(poem_id = id, editing = False, edit_timestamp = request.now)\n            # Create a new insert into permission table if poem was created Private (give owner permission)\n            if form.vars.permission == \'Private\':\n                db.permission.insert(user_id = auth.user, poem_id = id)\n            redirect(URL(\'poem\', args=id))\n    # Create form for haiku\n    elif request.args(0) == \'haiku\':\n        form = SQLFORM.factory(db.poem, db.haiku, fields=[\'title\', \'description\', \'start_haiku\', \'permission\']).process(onvalidation = create_haiku_check)\n        form.vars.category = \'Haiku\'\n        if form.accepted:\n            word_list = str(form.vars.start_haiku).split(\' \')\n            word_count = len(word_list)\n            syllable_count = 0\n            for word in word_list:\n                syllable_count += count_syllables(word)\n\n            id = db.poem.insert(**db.poem._filter_fields(form.vars))\n            db.haiku.insert(poem_id = id, start_haiku = form.vars.start_haiku, word_count = word_count, syllable_count = syllable_count, body_syllable_count = syllable_count)\n\n            # Create new mutex for this poem\n            db.mutex.insert(poem_id = id, editing = False, edit_timestamp = request.now)\n\n            # Create a new insert into permission table if poem was created Private (give owner permission)\n            if form.vars.permission == \'Private\':\n                db.permission.insert(user_id = auth.user, poem_id = form.vars.id)\n            redirect(URL(\'poem\', args=id))\n    else:\n        redirect(URL(\'browse\'))\n    return locals()\n\ndef create_haiku_check (form):\n\n    word_list = str(form.vars.start_haiku).split(\' \')\n    word_count = len(word_list)\n    syllable_count = 0\n    for word in word_list:\n        syllable_count += count_syllables(word)\n        if syllable_count > 5:\n            form.errors.start_haiku = \'Too many Syllables (5 Max)\'\n\n@auth.requires_login()\ndef edit():\n    # Redirect to poem browser if no argument for poem id\n    if not request.args(0): redirect(URL(\'browse\'))\n\n    # Load poem using the URL argument as poem id\n    poem_id = request.args(0,cast=int)\n    poem = db.poem(poem_id)\n\n    # Displaying ABAB\n    if (poem.category == \'16 line ABAB rhyme\') or (poem.category == \'16 line AABB rhyme\') or (poem.category == \'Sonnet\'):\n        abab = db(db.abab.poem_id == poem.id).select().first()\n        lines = db(db.new_line.poem_id == poem.id).select(orderby=db.new_line.line_number)\n        contributors = db(db.new_line.poem_id == poem.id).select(db.new_line.author, groupby=db.new_line.author)\n    # Displaying Haiku\n    elif poem.category == \'Haiku\':\n        haiku = db(db.haiku.poem_id == poem.id).select().first()\n        words = db(db.new_word.poem_id == poem.id).select(orderby=db.new_word.word_number)\n        contributors = db(db.new_word.poem_id == poem.id).select(db.new_word.author, groupby=db.new_word.author)\n\n    # Redirect if current user is not owner of poem\n    if poem.author != auth.user.id:\n        session.flash = \'You are not the owner of this poem and cannot edit it\'\n        redirect(URL(\'poem\',args=poem.id))\n\n    # Create SQLFORM\n    form = SQLFORM(db.poem, record=poem, fields=[\'title\',\'description\']).process()\n    if (poem.category == \'16 line ABAB rhyme\') or (poem.category == \'16 line AABB rhyme\') or (poem.category == \'Sonnet\'):\n        lines = db(db.new_line.poem_id == poem_id).select(orderby=db.new_line.line_number)\n        lines_form = []\n        line_form = []\n        for line in lines:\n            delete_form = FORM(INPUT(_name="line_id", _type=\'hidden\',value=line.id), INPUT(_type=\'submit\', _value = \'Delete\')).process(onvalidation=delete_line, next=URL(\'edit\', args=poem.id))\n            delete_form.vars.line = line.line\n            lines_form.append(delete_form)\n            line_form.append(line.line)\n    elif poem.category == \'Haiku\':\n        word = db(db.new_word.poem_id == poem_id).select(orderby=db.new_word.word_number)\n        words_form = []\n        word_form = []\n        for word in words:\n            delete_word_form = FORM(INPUT(_name="word_id", _type=\'hidden\',value=word.id), INPUT(_type=\'submit\', _value = \'Delete\')).process(onvalidation=delete_word, next=URL(\'edit\', args=poem.id))\n            delete_word_form.vars.word = word.word\n            words_form.append(delete_word_form)\n            word_form.append(word.word)\n\n    if form.accepted: redirect(URL(\'browse\'))\n    forms = FORM(\'Username: \',\n              INPUT(_name=\'username\'),\n              INPUT(_type=\'submit\'))\n    if forms.accepts(request,session):\n        added = False\n        for users in db(db.auth_user).select():\n            if(users.username == forms.vars.username):\n                for permission in db(db.permission).select():\n                    if(permission.user_id == users.id and permission.poem_id == poem.id):\n                        response.flash = \'Already Added\'\n                    else:\n                        added = True\n                if(added == True):\n                    db.permission.insert(user_id = users.id , poem_id = poem.id)\n                    response.flash = \'Added\'\n    return locals()\n\ndef delete_line(form):\n    print form.vars.line_id\n    row = db(db.new_line.id == form.vars.line_id).select().first()\n    row.update_record(line = \'\')\n\ndef delete_word(form):\n    print form.vars.word_id\n    word = db(db.new_word.id == form.vars.word_id).select().first()\n    word.update_record(word = \'\')\n\nKEY = \'mykey\'\n\n@auth.requires_login()\ndef add_check():\n    # Redirect to poem browser if no argument for poem id\n    if not request.args(0): redirect(URL(\'browse\'))\n    poem_id = request.args(0,cast=int)\n    poem = db.poem(poem_id)\n    mutex = db(db.mutex.poem_id == poem_id).select().first()\n\n    if request.vars.quit:\n        mutex.update_record(editing = False)\n    else:\n        # Check if poem is private and if current user has proper permissions, redirect if no permission\n        if poem.permission == \'Private\':\n            print \'private\'\n            print db(db.permission.poem_id == poem.id).select().first().user_id\n            print auth.user.id\n            if not db((db.permission.poem_id == poem.id) & (db.permission.user_id == auth.user_id)).select():\n                session.flash = \'You do not have permission to add to this poem\'\n                redirect(URL(\'poem\', args=poem.id))\n\n        # Check and redirect if another user is currently trying to add a line for this poem\n        if mutex.editing:\n            edit_timestamp = mutex.edit_timestamp\n            minutes_elapsed = (datetime.datetime.now() - edit_timestamp).total_seconds() / 60\n            if minutes_elapsed < 0.1:\n                session.flash = \'A user is currently adding a line!\'\n                redirect(URL(\'poem\', args=poem_id))\n\n        mutex.update_record(editing = True, edit_timestamp = request.now)\n        redirect(URL(\'add\', args=poem_id, hmac_key=KEY))\n        print \'should not get here\'\n\ndef unlocked_mutex():\n    print \'trying to unlock...\'\n    if not request.args(0): redirect(URL(\'browse\'))\n    poem_id = request.args(0,cast=int)\n    mutex = db(db.mutex.poem_id == poem_id).select().first()\n    if request.vars.quit:\n        mutex.update_record(editing = False)\n        print \'unlocked mutex?\'\n\n@auth.requires_login()\ndef add():\n    import urllib\n    import urllib2\n    from gluon.contrib import simplejson\n\n    if not URL.verify(request, hmac_key=KEY): redirect(URL(\'browse\'))\n    # Redirect to poem browser if no argument for poem id\n    if not request.args(0): redirect(URL(\'browse\'))\n\n    # Load poem using the URL argument as poem id\n    poem = db.poem(request.args(0,cast=int))\n\n    # Add form for ABAB\n    if (poem.category == \'16 line ABAB rhyme\') or (poem.category == \'16 line AABB rhyme\') or (poem.category == \'Sonnet\') or (poem.category == \'Limerick\') :\n        abab = db(db.abab.poem_id == poem.id).select().first()\n        lines = db(db.new_line.poem_id == poem.id).select(orderby=db.new_line.line_number)\n        if (poem.category == \'16 line ABAB rhyme\') or ((poem.category == \'Sonnet\') and (abab.line_count < 12)):\n        # Grab last word in the second to last line to rhyme by default (for ABAB rhyme scheme)\n            rhyme_word = \'\'\n            if abab.line_count == 2:\n                rhyme_word = abab.body.splitlines()[0].split(\' \')[-1]\n            elif abab.line_count == 3:\n                rhyme_word = abab.body.splitlines()[1].split(\' \')[-1]\n            else:\n                rhyme_line = db((db.new_line.poem_id == poem.id) & (db.new_line.line_number == abab.line_count-1)).select().first()\n                rhyme_word = rhyme_line.line.split(\' \')[-1]\n        elif (poem.category == \'Sonnet\') and (abab.line_count > 11):\n            rhyme_word = \'\'\n            rhyme_line = db((db.new_line.poem_id == poem.id) & (db.new_line.line_number == abab.line_count)).select().first()\n            rhyme_word = rhyme_line.line.split(\' \')[-1]\n        elif (poem.category == \'16 line AABB rhyme\') or ((poem.category == \'Limerick\') and (abab.line_count+1 < 5)):\n            rhyme_word = \'\'\n            if abab.line_count == 2:\n                rhyme_word = \'\'\n            else:\n                rhyme_line = db((db.new_line.poem_id == poem.id) & (db.new_line.line_number == abab.line_count)).select().first()\n                rhyme_word = rhyme_line.line.split(\' \')[-1]\n        elif (poem.category == \'Limerick\') and (abab.line_count+1 > 4):\n            rhyme_word = \'\'\n            rhyme_word = abab.body.splitlines()[0].split(\' \')[-1]\n        #Get use the rhymebrain API\n        url = \'http://rhymebrain.com/talk\'\n        data = {}\n        data[\'function\'] = \'getRhymes\'\n        data[\'word\'] = rhyme_word\n        url_values = urllib.urlencode(data)\n        full_url = url + \'?\' + url_values\n        data = urllib2.urlopen(full_url)\n        result = data.read()\n        parsed_json = simplejson.loads(result)\n\n        sorted_syllables = [[] for x in range(11)]\n        for entry in parsed_json:\n            syllable_count = int(entry[\'syllables\'])\n            word = str(entry[\'word\'].encode(\'utf-8\',"ignore"))\n            sorted_syllables[syllable_count].append(word)\n\n        # Create SQLFORM for the user to add a single line as a String\n        form = SQLFORM(db.new_line, fields=[\'line\'])\n        form.vars.poem_id = poem.id\n        form.vars.line_number = abab.line_count + 1\n\n        form.process()\n        if form.accepted:\n            abab.update_record(line_count = abab.line_count + 1)\n            mutex = db(db.mutex.poem_id == poem.id).select().first()\n            mutex.update_record(editing = False)\n            redirect(URL(\'poem\', args=poem.id))\n    # Add form for Haiku\n    elif poem.category == \'Haiku\':\n        haiku = db(db.haiku.poem_id == poem.id).select().first()\n        words = db(db.new_word.poem_id == poem.id).select(orderby=db.new_word.word_number)\n        form = SQLFORM(db.new_word, fields=[\'word\'])\n        form.vars.poem_id = poem.id\n        form.vars.word_number = haiku.word_count + 1\n        syllables_left = 0\n        if haiku.syllable_count < 5:\n            form.vars.line_count = 1\n            syllables_left = 5 - haiku.syllable_count\n        elif 5 <= haiku.syllable_count <=11:\n            form.vars.line_count = 2\n            syllables_left = 12 - haiku.syllable_count\n        elif 11 < haiku.syllable_count:\n            form.vars.line_count = 3\n            syllables_left = 17 - haiku.syllable_count\n\n        form.process(onvalidation = add_haiku_check)\n        if form.accepted:\n            syllable_count = count_syllables(form.vars.word)\n            db.new_word(form.vars.id).update_record(syllables = syllable_count)\n            haiku.update_record(word_count = haiku.word_count + 1, syllable_count = haiku.syllable_count + syllable_count)\n            mutex = db(db.mutex.poem_id == poem.id).select().first()\n            mutex.update_record(editing=False)\n            redirect(URL(\'poem\', args=poem.id))\n\n    return locals()\n\ndef add_haiku_check(form):\n    haiku = db(db.haiku.poem_id == form.vars.poem_id).select().first()\n\n    syllables_left = 0\n    if haiku.syllable_count < 5:\n        syllables_left = 5 - haiku.syllable_count\n    elif 5 <= haiku.syllable_count <=11:\n        syllables_left = 12 - haiku.syllable_count\n    elif 11 < haiku.syllable_count:\n        syllables_left = 17 - haiku.syllable_count\n\n    if count_syllables(form.vars.word) > syllables_left:\n        form.errors.word = \'Word has too many syllables for this line\'\n\n@auth.requires_login()\ndef specialadd():\n    import urllib\n    import urllib2\n    from gluon.contrib import simplejson\n\n    # Redirect to poem browser if no argument for poem id\n    if not request.args(0): redirect(URL(\'browse\'))\n    lineNumber = request.args(1,cast = int)\n    # Load poem using the URL argument as poem id\n    poem = db.poem(request.args(0,cast=int))\n    rows = db(db.new_line.poem_id == poem.id).select(orderby=db.new_line.line_number)\n    check = db((db.new_line.poem_id == poem.id) & (db.new_line.line_number == request.args(1))).select().first()\n    if check:\n        if not check.line == \'\':\n            redirect(URL(\'browse\'))\n    # Check if poem is private and if current user has proper permissions, redirect if no permission\n    if poem.permission == \'Private\':\n        print \'private\'\n        print db(db.permission.poem_id == poem.id).select().first().user_id\n        print auth.user.id\n        if not db((db.permission.poem_id == poem.id) & (db.permission.user_id == auth.user_id)).select():\n            session.flash = \'You do not have permission to add to this poem\'\n            redirect(URL(\'poem\', args=poem.id))\n\n    # Add form for ABAB\n    if (poem.category == \'16 line ABAB rhyme\') or (poem.category == \'16 line AABB rhyme\'):\n        abab = db(db.abab.poem_id == poem.id).select().first()\n        rows = db(db.new_line.poem_id == poem.id).select(orderby=db.new_line.line_number)\n        if poem.category == \'16 line ABAB rhyme\':\n            # Grab last word in the second to last line to rhyme by default (for ABAB rhyme scheme)\n            rhyme_word = \'\'\n            rhyme_line = db((db.new_line.poem_id == poem.id) & (db.new_line.line_number == lineNumber+2)).select().first()\n            test = False\n            if lineNumber-1 == 2:\n                rhyme_word = abab.body.splitlines()[0].split(\' \')[-1]\n            elif lineNumber-1 == 3:\n                rhyme_word = abab.body.splitlines()[1].split(\' \')[-1]\n            elif rhyme_line:\n                rhyme_word = rhyme_line.line.split(\' \')[-1]\n                test = True\n            else:\n                rhyme_line = db((db.new_line.poem_id == poem.id) & (db.new_line.line_number == lineNumber-2)).select().first()\n                rhyme_word = rhyme_line.line.split(\' \')[-1]\n\n        elif poem.category == \'16 line AABB rhyme\':\n            # Grab last word in the second to last line to rhyme by default (for ABAB rhyme scheme)\n            rhyme_word = \'\'\n            rhyme_line = db((db.new_line.poem_id == poem.id) & (db.new_line.line_number == lineNumber+1)).select().first()\n            test = False\n            if (lineNumber % 4 == 0) or (lineNumber % 4 == 2):\n                rhyme_line = db((db.new_line.poem_id == poem.id) & (db.new_line.line_number == lineNumber-1)).select().first()\n                rhyme_word = rhyme_line.line.split(\' \')[-1]\n            elif rhyme_line:\n                rhyme_word = rhyme_line.line.split(\' \')[-1]\n                test = True\n        #Get use the rhymebrain API\n        url = \'http://rhymebrain.com/talk\'\n        data = {}\n        data[\'function\'] = \'getRhymes\'\n        data[\'word\'] = rhyme_word\n        url_values = urllib.urlencode(data)\n        full_url = url + \'?\' + url_values\n        data = urllib2.urlopen(full_url)\n        result = data.read()\n        parsed_json = simplejson.loads(result)\n\n        sorted_syllables = [[] for x in range(11)]\n        for entry in parsed_json:\n            syllable_count = int(entry[\'syllables\'])\n            word = str(entry[\'word\'].encode(\'utf-8\',"ignore"))\n            sorted_syllables[syllable_count].append(word)\n\n        # Create SQLFORM for the user to add a single line as a String\n        form = FORM(INPUT(_name = "line"),\n               INPUT(_type="submit",_value = "Add"))\n        if form.accepts(request,session):\n            response.flash = form.vars.line\n            if rows:\n                update = db((db.new_line.line == \'\') & (db.new_line.line_number == request.args(1))).select().first()\n                update.update_record(line = form.vars.line)\n                update.update_record(author = auth.user.id)\n                redirect(URL(\'poem\', args=poem.id))\n\n    # Add form for Haiku\n    elif poem.category == \'Haiku\':\n        haiku = db(db.haiku.poem_id == poem.id).select().first()\n        words = db(db.new_word.poem_id == poem.id).select(orderby=db.new_word.word_number)\n        # Create SQLFORM for the user to add a single line as a String\n        form = FORM(INPUT(_name = "word"),\n               INPUT(_type="submit",_value = "Add"))\n        if form.accepts(request,session):\n            response.flash = form.vars.word\n            if words:\n                update = db((db.new_word.word == \'\') & (db.new_word.word_number == request.args(1))).select().first()\n                update.update_record(word = form.vars.word)\n                update.update_record(author = auth.user.id)\n                redirect(URL(\'poem\', args=poem.id))\n    return locals()\n\ndef pick():\n    return locals()\n\n@auth.requires_login()\ndef profile():\n    user = auth.user\n    poem = db.poem\n    poems_owned = db(db.poem.author == user.id).select()\n    poems_contributed = db((db.new_line.author == user.id) & (db.poem.id == db.new_line.poem_id)).select(groupby=db.poem.id)\n    return locals()\n\nresponse._vars=response._caller(edit)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'sqlite3'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of OperationalError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of OperationalError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of OperationalError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of OperationalError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of OperationalError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of OperationalError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of OperationalError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of OperationalError object>'
p35
sS'__class__'
p36
S"<class 'sqlite3.OperationalError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of OperationalError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of OperationalError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of OperationalError object>"
p45
sS'args'
p46
S"('database is locked',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of OperationalError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of OperationalError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of OperationalError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of OperationalError object>"
p57
ssS'evalue'
p58
S'database is locked'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S'spf\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>P2P</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>52</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-3ac20f63-df85-4c07-a945-36c73deb877d<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_p2p</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a3ebcd58-9fcd-473c-9b07-0ab0b92ec2ed<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-c1b08482-9d17-4173-868f-0d665c353d1e<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>374</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary2NxZcx1s1sY8SBm1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>374</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary2NxZcx1s1sY8SBm1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-c1b08482-9d17-4173-868f-0d665c353d1e; session_id_admin=127.0.0.1-3ac20f63-df85-4c07-a945-36c73deb877d; session_id_p2p=127.0.0.1-a3ebcd58-9fcd-473c-9b07-0ab0b92ec2ed</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ORIGIN</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/P2P/default/edit/52</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/P2P/default/edit/52</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>49205</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>Kevin-VAIO</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py\\\\applications\\\\P2P\\\\&#x27;, &#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Kevin\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1c486c0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::20c1:38ba:3f57:d455%8&#x27;, &#x27;192.168.43.170&#x27;, &#x27;fe80::6c2f:855d:fcb0:2777%9&#x27;, &#x27;2001:0:9d38:6ab8:20c1:38ba:3f57:d455&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Kevin-VAIO&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_length</td><td style="vertical-align:top;">:</td><td><div>374</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_type</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary2NxZcx1s1sY8SBm1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Kevin\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_length</td><td style="vertical-align:top;">:</td><td><div>374</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_type</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary2NxZcx1s1sY8SBm1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-c1b08482-9d17-4173-868f-0d665c353d1e; session_id_admin=127.0.0.1-3ac20f63-df85-4c07-a945-36c73deb877d; session_id_p2p=127.0.0.1-a3ebcd58-9fcd-473c-9b07-0ab0b92ec2ed</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_origin</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/P2P/default/edit/52</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::20c1:38ba:3f57:d455%8</div></td></tr><tr><td><div>192.168.43.170</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>2001:0:9d38:6ab8:20c1:38ba:3f57:d455</div></td></tr><tr><td><div>Kevin-VAIO</div></td></tr><tr><td><div>fe80::6c2f:855d:fcb0:2777%9</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/P2P/default/edit/52</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>49205</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/P2P/default/edit/52</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>Kevin-VAIO</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Kevin\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.13.4-stable+timestamp.2015.12.26.04.59.39</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x00E9D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x01E8F308&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x03F32FB0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x00E9D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x01E8F308&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x03F32FB0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>edit</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py\\\\applications\\\\P2P\\\\&#x27;, &#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Kevin\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1c486c0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::20c1:38ba:3f57:d455%8&#x27;, &#x27;192.168.43.170&#x27;, &#x27;fe80::6c2f:855d:fcb0:2777%9&#x27;, &#x27;2001:0:9d38:6ab8:20c1:38ba:3f57:d455&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Kevin-VAIO&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Kevin\\Desktop\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::20c1:38ba:3f57:d455%8</div></td></tr><tr><td><div>192.168.43.170</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>2001:0:9d38:6ab8:20c1:38ba:3f57:d455</div></td></tr><tr><td><div>Kevin-VAIO</div></td></tr><tr><td><div>fe80::6c2f:855d:fcb0:2777%9</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.13.4-stable+timestamp.2015.12.26.04.59.39</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 2, 25, 4, 31, 51, 841000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div>52</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/P2P/default/edit/52</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 2, 25, 12, 31, 51, 841000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x03FB91D0&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 08CFF920, file "C:\\User...pplications\\P2P\\controllers/default.py", line 10>'
p73
ssS'lnum'
p74
I227
sS'lines'
p75
(dp76
I224
S'            ccode = code'
p77
sI225
S'        else:'
p78
sI226
S'            ccode = compile2(code, layer)'
p79
sI227
S'        exec ccode in environment'
p80
sI228
S'    except HTTP:'
p81
sI229
S'        raise'
p82
sI230
S'    except RestrictedError:'
p83
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p84
sI222
S'    try:'
p85
sI223
S'        if isinstance(code, types.CodeType):'
p86
ssS'call'
p87
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ... locals()\\n\\nresponse._vars=response._caller(edit)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer=r'C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\controllers/default.py')"
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\controllers\\default.py'
p92
sg68
(dp93
sg74
I474
sg75
(dp94
I463
S'def pick():'
p95
sI464
S'    return locals()'
p96
sI465
S''
sI466
S'@auth.requires_login()'
p97
sI467
S'def profile():'
p98
sI468
S'    user = auth.user'
p99
sI469
S'    poem = db.poem'
p100
sI470
S'    poems_owned = db(db.poem.author == user.id).select()'
p101
sI471
S'    poems_contributed = db((db.new_line.author == user.id) & (db.poem.id == db.new_line.poem_id)).select(groupby=db.poem.id)'
p102
sI472
S'    return locals()'
p103
ssg87
S'()'
p104
sg89
S'<module>'
p105
sa(dp106
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\globals.py'
p107
sg68
(dp108
S'self'
p109
S'undefined'
p110
sS'f'
S'<function edit>'
p111
ssg74
I412
sg75
(dp112
I416
S"        self.generic_patterns = ['*']"
p113
sI407
S"        self.flash = ''            # used by the default view layout"
p114
sI408
S'        self.meta = Storage()      # used by web2py_ajax.html'
p115
sI409
S'        self.menu = []             # used by the default view layout'
p116
sI410
S'        self.files = []            # used by web2py_ajax.html'
p117
sI411
S'        self._vars = None'
p118
sI412
S'        self._caller = lambda f: f()'
p119
sI413
S'        self._view_environment = None'
p120
sI414
S'        self._custom_commit = None'
p121
sI415
S'        self._custom_rollback = None'
p122
ssg87
S'(f=<function edit>)'
p123
sg89
S'<lambda>'
p124
sa(dp125
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\tools.py'
p126
sg68
(dp127
S'action'
p128
S'<function edit>'
p129
sS'a'
S'()'
p130
sS'b'
g21
ssg74
I4236
sg75
(dp131
I4231
S'                    flag = condition'
p132
sI4232
S'                if not flag:'
p133
sI4233
S'                    current.session.flash = self.messages.access_denied'
p134
sI4234
S'                    return call_or_redirect('
p135
sI4235
S'                        self.settings.on_failed_authorization)'
p136
sI4236
S'                return action(*a, **b)'
p137
sI4237
S'            f.__doc__ = action.__doc__'
p138
sI4238
S'            f.__name__ = action.__name__'
p139
sI4239
S'            f.__dict__.update(action.__dict__)'
p140
sI4240
S'            return f'
p141
ssg87
S'(*a=(), **b={})'
p142
sg89
S'f'
sa(dp143
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\controllers\\default.py'
p144
sg68
(dp145
S'global URL'
p146
S'<function URL>'
p147
sS'_type'
p148
g110
sS'onvalidation'
p149
g110
sS'poem'
p150
S"<Row {'abab': <Set (abab.poem_id = 52)>, 'catego...(2016, 2, 25, 4, 16, 4), 'description': 'feage'}>"
p151
sS'args'
p152
g110
sS'global delete_line'
p153
S'<function delete_line>'
p154
sS'value'
p155
g110
sS'_name'
p156
g110
sS'_value'
p157
g110
sS'builtinnext'
p158
S'<built-in function next>'
p159
sS'delete_form'
p160
g110
sS'global FORM'
p161
S"<class 'gluon.html.FORM'>"
p162
sS'line'
p163
S"<Row {'line_number': 3L, 'author': 3L, 'id': 47L...ted': datetime.datetime(2016, 2, 25, 4, 16, 15)}>"
p164
sS'line.id'
p165
S'47L'
p166
sS'poem.id'
p167
S'52L'
p168
sS'global INPUT'
p169
S"<class 'gluon.html.INPUT'>"
p170
ssg74
I166
sg75
(dp171
I161
S"    if (poem.category == '16 line ABAB rhyme') or (poem.category == '16 line AABB rhyme') or (poem.category == 'Sonnet'):"
p172
sI162
S'        lines = db(db.new_line.poem_id == poem_id).select(orderby=db.new_line.line_number)'
p173
sI163
S'        lines_form = []'
p174
sI164
S'        line_form = []'
p175
sI165
S'        for line in lines:'
p176
sI166
S'            delete_form = FORM(INPUT(_name="line_id", _type=\'hidden\',value=line.id), INPUT(_type=\'submit\', _value = \'Delete\')).process(onvalidation=delete_line, next=URL(\'edit\', args=poem.id))'
p177
sI167
S'            delete_form.vars.line = line.line'
p178
sI168
S'            lines_form.append(delete_form)'
p179
sI169
S'            line_form.append(line.line)'
p180
sI170
S"    elif poem.category == 'Haiku':"
p181
ssg87
S'()'
p182
sg89
S'edit'
p183
sa(dp184
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\html.py'
p185
sg68
(dp186
S'self'
p187
S'<gluon.html.FORM object>'
p188
sS'self.validate'
p189
S'<bound method FORM.validate of <gluon.html.FORM object>>'
p190
sS'kwargs'
p191
S"{'dbio': True, 'next': '/P2P/default/edit/52', 'onvalidation': <function delete_line>}"
p192
ssg74
I2304
sg75
(dp193
I2304
S'        self.validate(**kwargs)'
p194
sI2305
S'        return self'
p195
sI2306
S''
sI2307
S'    REDIRECT_JS = "window.location=\'%s\';return false"'
p196
sI2308
S''
sI2299
S''
sI2300
S''
sI2301
S'        """'
p197
sI2302
S"        kwargs['dbio'] = kwargs.get('dbio', True)"
p198
sI2303
S'                                    # necessary for SQLHTML forms'
p199
ssg87
S"(self=<gluon.html.FORM object>, **kwargs={'dbio': True, 'next': '/P2P/default/edit/52', 'onvalidation': <function delete_line>})"
p200
sg89
S'process'
p201
sa(dp202
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\html.py'
p203
sg68
(dp204
S'self'
p205
S'<gluon.html.FORM object>'
p206
sS'self.accepts'
p207
S'<bound method FORM.accepts of <gluon.html.FORM object>>'
p208
sS'kwargs'
p209
S"{'dbio': True, 'onvalidation': <function delete_line>, 'request_vars': <Storage {'line_id': '55', '_formkey': '1a2d5ab2...4d03-8583-d569d0e445ad', '_formname': 'default'}>, 'session': <Storage {'last_query': 'db.new_line.id>0', '_au...gin]': ['e7e91250-0df6-4107-8822-a6a074a9a123']}>}"
p210
ssg74
I2241
sg75
(dp211
I2240
S''
sI2241
S'        if self.accepts(**kwargs):'
p212
sI2242
S"            if onsuccess == 'flash':"
p213
sI2243
S'                if next:'
p214
sI2244
S'                    current.session.flash = message_onsuccess'
p215
sI2245
S'                else:'
p216
sI2236
S"        for key in ('message_onsuccess', 'message_onfailure', 'onsuccess',"
p217
sI2237
S"                    'onfailure', 'next', 'message_onchange', 'onchange'):"
p218
sI2238
S'            if key in kwargs:'
p219
sI2239
S'                del kwargs[key]'
p220
ssg87
S"(self=<gluon.html.FORM object>, **kwargs={'dbio': True, 'onvalidation': <function delete_line>, 'request_vars': <Storage {'line_id': '55', '_formkey': '1a2d5ab2...4d03-8583-d569d0e445ad', '_formname': 'default'}>, 'session': <Storage {'last_query': 'db.new_line.id>0', '_au...gin]': ['e7e91250-0df6-4107-8822-a6a074a9a123']}>})"
p221
sg89
S'validate'
p222
sa(dp223
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\html.py'
p224
sg68
(dp225
S'global call_as_list'
p226
S'<function call_as_list>'
p227
sS'self'
p228
S'<gluon.html.FORM object>'
p229
sS'onvalidation'
p230
S'<function delete_line>'
p231
ssg74
I2142
sg75
(dp232
I2144
S'            status = False'
p233
sI2145
S'        if not session is None:'
p234
sI2146
S"            if hasattr(self, 'record_hash'):"
p235
sI2137
S'                if changed:'
p236
sI2138
S'                    if onchange and self.record_changed and \\'
p237
sI2139
S'                            self.detect_record_change:'
p238
sI2140
S'                        call_as_list(onchange, self)'
p239
sI2141
S'            elif status:'
p240
sI2142
S'                call_as_list(onvalidation, self)'
p241
sI2143
S'        if self.errors:'
p242
ssg87
S"(self=<gluon.html.FORM object>, request_vars=<Storage {'line_id': '55', '_formkey': '1a2d5ab2...4d03-8583-d569d0e445ad', '_formname': 'default'}>, session=<Storage {'last_query': 'db.new_line.id>0', '_au...gin]': ['e7e91250-0df6-4107-8822-a6a074a9a123']}>, formname='default', keepvalues=False, onvalidation=<function delete_line>, hideerror=False, **kwargs={'dbio': True})"
p243
sg89
S'accepts'
p244
sa(dp245
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\html.py'
p246
sg68
(dp247
S'a'
S'(<gluon.html.FORM object>,)'
p248
sS'item'
p249
S'<function delete_line>'
p250
sS'b'
g21
ssg74
I146
sg75
(dp251
I141
S''
sI142
S'def call_as_list(f, *a, **b):'
p252
sI143
S'    if not isinstance(f, (list, tuple)):'
p253
sI144
S'        f = [f]'
p254
sI145
S'    for item in f:'
p255
sI146
S'        item(*a, **b)'
p256
sI147
S''
sI148
S"def truncate_string(text, length, dots='...'):"
p257
sI149
S"    text = text.decode('utf-8')"
p258
sI150
S'    if len(text) > length:'
p259
ssg87
S'(f=[<function delete_line>], *a=(<gluon.html.FORM object>,), **b={})'
p260
sg89
S'call_as_list'
p261
sa(dp262
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\controllers\\default.py'
p263
sg68
(dp264
S'line'
p265
g110
sS'row.update_record'
p266
S'<pydal.helpers.classes.RecordUpdater object>'
p267
sS'row'
p268
S"<Row {'line_number': 11L, 'author': 3L, 'id': 55...ted': datetime.datetime(2016, 2, 25, 4, 17, 42)}>"
p269
ssg74
I201
sg75
(dp270
I196
S'    return locals()'
p271
sI197
S''
sI198
S'def delete_line(form):'
p272
sI199
S'    print form.vars.line_id'
p273
sI200
S'    row = db(db.new_line.id == form.vars.line_id).select().first()'
p274
sI201
S"    row.update_record(line = '')"
p275
sI202
S''
sI203
S'def delete_word(form):'
p276
sI204
S'    print form.vars.word_id'
p277
sI205
S'    word = db(db.new_word.id == form.vars.word_id).select().first()'
p278
ssg87
S'(form=<gluon.html.FORM object>)'
p279
sg89
S'delete_line'
p280
sa(dp281
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\helpers\\classes.py'
p282
sg68
(dp283
S'newfields'
p284
S"{'line': ''}"
p285
ssg74
I245
sg75
(dp286
I240
S'        newfields = fields or dict(colset)'
p287
sI241
S'        for fieldname in list(newfields.keys()):'
p288
sI242
S"            if fieldname not in table.fields or table[fieldname].type == 'id':"
p289
sI243
S'                del newfields[fieldname]'
p290
sI244
S'        table._db(table._id == id, ignore_common_filters=True).update('
p291
sI245
S'            **newfields'
p292
sI246
S'        )'
p293
sI247
S'        colset.update(newfields)'
p294
sI248
S'        return colset'
p295
sI249
S''
ssg87
S"(self=<pydal.helpers.classes.RecordUpdater object>, **fields={'line': ''})"
p296
sg89
S'__call__'
p297
sa(dp298
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\objects.py'
p299
sg68
(dp300
S'table._tablename'
p301
S"'new_line'"
p302
sS'db._adapter'
p303
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p304
sS'fields'
p305
S"[(<pydal.objects.Field object>, '')]"
p306
sS'self'
p307
S'<Set (new_line.id = 55)>'
p308
sS'db'
p309
S'<DAL uri="sqlite://storage.sqlite">'
p310
sS'self.query'
p311
S'<Query (new_line.id = 55)>'
p312
sS'ret'
p313
g110
sS'table'
p314
S'<Table new_line (id,poem_id,author,line_number,line,date_posted)>'
p315
sS'db._adapter.update'
p316
S'<bound method SQLiteAdapter.update of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p317
ssg74
I2059
sg75
(dp318
I2054
S'        if any(f(self,update_fields) for f in table._before_update):'
p319
sI2055
S'            return 0'
p320
sI2056
S'        fields = table._listify(update_fields,update=True)'
p321
sI2057
S'        if not fields:'
p322
sI2058
S'            raise SyntaxError("No fields to update")'
p323
sI2059
S'        ret = db._adapter.update("%s" % table._tablename,self.query,fields)'
p324
sI2060
S'        ret and [f(self,update_fields) for f in table._after_update]'
p325
sI2061
S'        return ret'
p326
sI2062
S''
sI2063
S'    def update_naive(self, **update_fields):'
p327
ssg87
S"(self=<Set (new_line.id = 55)>, **update_fields={'line': ''})"
p328
sg89
S'update'
p329
sa(dp330
g66
S'C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p331
sg68
(dp332
S'e'
S"OperationalError('database is locked',)"
p333
ssg74
I1031
sg75
(dp334
I1026
S'        except Exception:'
p335
sI1027
S'            e = sys.exc_info()[1]'
p336
sI1028
S'            table = self.db[tablename]'
p337
sI1029
S"            if hasattr(table,'_on_update_error'):"
p338
sI1030
S'                return table._on_update_error(table,query,fields,e)'
p339
sI1031
S'            raise e'
p340
sI1032
S'        try:'
p341
sI1033
S'            return self.cursor.rowcount'
p342
sI1034
S'        except:'
p343
sI1035
S'            return None'
p344
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, tablename='new_line', query=<Query (new_line.id = 55)>, fields=[(<pydal.objects.Field object>, '')])"
p345
sg89
g329
sasS'pyver'
p346
S'Python 2.7.9: C:\\Users\\Kevin\\Desktop\\web2py\\web2py.exe (prefix: )'
p347
sS'session'
p348
g61
(S's\x89\n\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>264c6bbe-11ed-47e6-8d7c-1f371bcea208</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 2, 25, 4, 31, 35, 990000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>test@test.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>test</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>3L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>test</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>testtest</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">3</td><td style="vertical-align:top;">:</td><td><div>user_3</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.new_line.id&gt;0</div></td></tr></table></div>'
tRp349
sS'etype'
p350
S"<class 'sqlite3.OperationalError'>"
p351
sS'date'
p352
S'Thu Feb 25 04:31:57 2016'
p353
sS'response'
p354
g61
(S'sS)\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x094A08A0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_p2p</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a3ebcd58-9fcd-473c-9b07-0ab0b92ec2ed<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="navbar-brand" href="index" id="web2py-logo"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/P2P/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Browse Poems</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/P2P/default/browse</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Search Poems</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/P2P/default/search</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Profile</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/P2P/default/profile</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/site</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Design</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/P2P</div></td></tr></table></div></td></tr><tr><td><div><li class="divider"></li></div></td></tr><tr><td><div><table><tr><td><div>Controller</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/P2P/controllers/default.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>View</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/P2P/views/default/edit.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>DB Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/P2P/models/db.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Menu Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/P2P/models/menu.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Config.ini</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/P2P/private/appconfig.ini</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Layout</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/P2P/views/layout.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Stylesheet</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/P2P/static/css/web2py-bootstrap3.css</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Database</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/P2P/appadmin/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Errors</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/errors/P2P</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>About</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/about/P2P</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/edit/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_p2p</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;C:\\\\Users\\\\Kevin\\\\Desktop\\\\web2py\\\\applications\\\\P2P\\\\sessions\\\\091\\\\123\\\\127.0.0.1-a3ebcd58-9fcd-473c-9b07-0ab0b92ec2ed&#x27;, mode &#x27;rb+&#x27; at 0x08D1F758&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\sessions\\127.0.0.1-a3ebcd58-9fcd-473c-9b07-0ab0b92ec2ed</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>59b7da9c89319777b30d373bbf5d0abf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a3ebcd58-9fcd-473c-9b07-0ab0b92ec2ed</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_p2p</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>P2P</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>P2P</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/edit.html</div></td></tr></table></div>'
tRp355
sS'locals'
p356
(dp357
S'e'
S"OperationalError('database is locked',)"
p358
sS'fields'
p359
S"[(<pydal.objects.Field object>, '')]"
p360
sS'self'
p361
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p362
sS'tablename'
p363
S"'new_line'"
p364
sS'sql'
p365
S'"UPDATE new_line SET line=\'\' WHERE (new_line.id = 55);"'
p366
sS'query'
p367
S'<Query (new_line.id = 55)>'
p368
sS'table'
p369
S'<Table new_line (id,poem_id,author,line_number,line,date_posted)>'
p370
sssS'traceback'
p371
S'Traceback (most recent call last):\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\controllers/default.py", line 474, in <module>\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\tools.py", line 4236, in f\n    return action(*a, **b)\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\controllers/default.py", line 166, in edit\n    delete_form = FORM(INPUT(_name="line_id", _type=\'hidden\',value=line.id), INPUT(_type=\'submit\', _value = \'Delete\')).process(onvalidation=delete_line, next=URL(\'edit\', args=poem.id))\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\html.py", line 2304, in process\n    self.validate(**kwargs)\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\html.py", line 2241, in validate\n    if self.accepts(**kwargs):\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\html.py", line 2142, in accepts\n    call_as_list(onvalidation, self)\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\html.py", line 146, in call_as_list\n    item(*a, **b)\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\applications\\P2P\\controllers/default.py", line 201, in delete_line\n    row.update_record(line = \'\')\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\helpers\\classes.py", line 245, in __call__\n    **newfields\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 2059, in update\n    ret = db._adapter.update("%s" % table._tablename,self.query,fields)\n  File "C:\\Users\\Kevin\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1031, in update\n    raise e\nOperationalError: database is locked\n'
p372
s.